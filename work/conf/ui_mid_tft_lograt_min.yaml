delay: 1
accumulate: false
read_data_kwargs:
  start: -60
  end: ~
  drop_duplicates: true
  query:
    btcusdt:
      target:
        engine_kwargs:
          url: sqlite:///btcusdt@feature_lograt.db
        read_kwargs:
          name: data
          columns: [ time, lograt_1-o_m_p-o_m_p ]
      tft:
        engine_kwargs:
          url: sqlite:///mid_tft_lograt_min@prediction.db
        read_kwargs:
          name: data
          group: btcusdt
          horizon: 60
          columns: [ time, "pred-.*", "pred_0.5-.*", "pred_.*" ]
          # resample_kwargs:
          #   rule: 1S
          # aggregate_kwargs:
          #   func: last
      # naive:
      #   engine_kwargs:
      #     url: sqlite:///mid_tft_lograt_naive@prediction.db
      #   read_kwargs:
      #     name: data
      #     group: btcusdt
      #     columns: [ time, "pred-.*" ]
      #     resample_kwargs:
      #       rule: 1S
      #     aggregate_kwargs:
      #       func: last
    ethusdt:
      target:
        engine_kwargs:
         url: sqlite:///ethusdt@feature_lograt.db
        read_kwargs:
          name: data
          columns: [ time, lograt_1-o_m_p-o_m_p ]
      tft:
        engine_kwargs:
          url: sqlite:///mid_tft_lograt_min@prediction.db
        read_kwargs:
          name: data
          group: ethusdt
          horizon: 60
          columns: [ time, "pred-.*", "pred_0.5-.*", "pred_.*" ]
          # resample_kwargs:
          #   rule: 1S
          # aggregate_kwargs:
          #   func: last
      # naive:
      #   engine_kwargs:
      #     url: sqlite:///mid_tft_lograt_naive@prediction.db
      #   read_kwargs:
      #     name: data
      #     group: ethusdt
      #     columns: [ time, "pred-.*" ]
      #     resample_kwargs:
      #       rule: 1S
      #     aggregate_kwargs:
      #       func: last
    ethbtc:
      target:
        engine_kwargs:
          url: sqlite:///ethbtc@feature_lograt.db
        read_kwargs:
          name: data
          columns: [ time, lograt_1-o_m_p-o_m_p ]
      tft:
        engine_kwargs:
         url: sqlite:///mid_tft_lograt_min@prediction.db
        read_kwargs:
          name: data
          group: ethusdt
          horizon: 60
          columns: [ time, "pred-.*", "pred_0.5-.*", "pred_.*" ]
          # resample_kwargs:
          #   rule: 1S
          # aggregate_kwargs:
          #   func: last
      # naive:
      #   engine_kwargs:
      #     url: sqlite:///mid_tft_lograt_naive@prediction.db
      #   read_kwargs:
      #     name: data
      #     group: ethusdt
      #     columns: [ time, "pred-.*" ]
      #     resample_kwargs:
      #       rule: 1S
      #     aggregate_kwargs:
      #       func: last